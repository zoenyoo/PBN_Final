gather(Variable, Count, -Threshold) %>%
mutate(Revenue =
case_when(Variable == "Count_TN"  ~ Count * 0,
Variable == "Count_TP"  ~ ((66000) * (Count * .25)) + (-7850 * (Count * .25)) +
(-32 * (Count * .50)),
Variable == "Count_FN"  ~ Count * 0,
Variable == "Count_FP"  ~ (-2850) * Count))
View(whichThreshold)
whichThreshold %>%
ggplot(.,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix"))
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
grid.arrange(ncol=2,
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)], legend=FALSE) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
theme(legend.position=NONE)+
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
theme(legend.position="none")+
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
theme(legend.position="bottom")+
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() +
guides(colour=guide_legend(title = "Confusion Matrix")) )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
guides(colour=guide_legend(title = "Confusion Matrix"))
theme(legend.position="bottom")+
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
guides(colour=guide_legend(title = "Confusion Matrix")),
theme(legend.position="bottom") +
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() + theme(legend.position="none") )
grid.arrange(ncol=2,
ggplot(whichThreshold,aes(Threshold, Revenue, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
guides(colour=guide_legend(title = "Confusion Matrix"))+
theme(legend.position="bottom") +
plotTheme(),
ggplot(whichThreshold,aes(Threshold, Count, colour = Variable)) +
geom_point() +
scale_colour_manual(values = palette5[c(5, 1:3)]) +
labs(title = "Revenue by confusion matrix type and threshold",
y = "Revenue") +
plotTheme() + theme(legend.position="none") )
library(ggplot2)
library(dplyr)
hh <- read.csv("./DVRPC HTS Database Files/1_Household_Public.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr);library(ggplot2);library(Hmisc);library(stargazer); library(htmlTable);library(kableExtra);library (gmodels);library(MASS);library(vcd);library(gridExtra);library(showtext);library(xtable);library(car);library(sf);library(sfnetworks); library(tidycensus);library(tidygraph);library(ggcorrplot)
options(scipen=0)
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL")
palette <- c("#10142A", "#47E9B9", "#F55D60", "#71EA48", "#C148EA", "#EAC148" )
viridisPalette <- c("#440154", "#73D055", "#F55D60", "#238A8D", "#FDE725")
#palette5 <- c("#324376", "#586ba4", "#f5dd90", "#ee964b", "#f95738")
palette4 <- c("#324376", "#586ba4", "#ee964b", "#f95738")
palette5 <- c("#FFFDFC", "#FFD5C8", "#FFC6B5", "#FF8061", "#F95738")
palette2 <- c("#324376", "#f95738")
hin <- read_sf("./data/high_injury_network_2020.shp")
hin <- read_sf("./data/high_injury_network_2020.shp")
streets <- read_sf("./data/CompleteStreets.shp")
ip <- read_sf("./data/intersection_polygons_clip.shp")
m311 <- read_sf("./data/m311.csv")
dat <- read_sf("./data/ip_acs_join.shp")
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL")
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL")
hin <- read_sf("./data/high_injury_network_2020.shp")
streets <- read_sf("./data/CompleteStreets.shp")
ip <- read_sf("./data/intersection_polygons_clip.shp")
m311 <- read_sf("./data/m311.csv")
dat <- read_sf("./data/ip_acs_join.shp")
View(dat)
ggplot(data=dat, aes=crsh_cn)+
geom_histogram()
ggplot(data=dat, aes(dat$crsh_cn))+
geom_histogram()
ggplot(data=dat, aes(log(crsh_cn)))+
geom_histogram()
ggplot(data=dat, aes(dat$all311_))+
geom_histogram()
ggplot(data=dat, aes(dat$m311))+
geom_histogram()
ggplot(data=dat, aes(dat$m311_cn))+
geom_histogram()
ggplot(data=dat, aes(m311_cn))+
geom_histogram()
ggplot(data=dat, aes(m311_cn))+
geom_histogram(binwidth=10)
ggplot(data=dat, aes(m311_cn))+
geom_histogram(binwidth=2)
ggplot(data=dat, aes(m311_cn))+
geom_histogram()
ggplot(data=dat, aes(m311_cn))+
geom_point()
ggplot(data=dat, aes(x=r311_,=m311_cn))+
ggplot(data=dat, aes(x=r311_,y=m311_cn))+
geom_point()
ggplot(data=dat, aes(x=all311_,y=m311_cn))+
geom_point()
do.regression <- function ( indep){
mod1sum<-summary(lm (dat$Drive.Alone.Trips ~  indep))
dat3<-c(mod1sum$coefficients[,1],
mod1sum$coefficients[, 2],
mod1sum$coefficients[, 3],
mod1sum$coefficients[, 4],
mod1sum$r.squared)
round(dat3,digits=3)
}
mod1sum<-summary(lm (dat$hin ~  indep))
do.regression <- function ( indep){
mod1sum<-summary(lm (dat$hin ~  indep))
dat3<-c(mod1sum$coefficients[,1],
mod1sum$coefficients[, 2],
mod1sum$coefficients[, 3],
mod1sum$coefficients[, 4],
mod1sum$r.squared)
round(dat3,digits=3)
}
library(dplyr);library(ggplot2);library(Hmisc);library(stargazer); library(htmlTable);library(kableExtra);library (gmodels);library(MASS);library(vcd);library(gridExtra);library(showtext);library(xtable);library(car);library(sf);library(sfnetworks); library(tidycensus);library(tidygraph);library(ggcorrplot);library(mlogit)
View(dat)
View(dat)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr);library(ggplot2);library(Hmisc);library(stargazer); library(htmlTable);library(kableExtra);library (gmodels);library(MASS);library(vcd);library(gridExtra);library(showtext);library(xtable);library(car);library(sf);library(sfnetworks); library(tidycensus);library(tidygraph);library(ggcorrplot);library(mlogit);library(AER);library(Hmisc)
options(scipen=0)
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL")
palette <- c("#10142A", "#47E9B9", "#F55D60", "#71EA48", "#C148EA", "#EAC148" )
viridisPalette <- c("#440154", "#73D055", "#F55D60", "#238A8D", "#FDE725")
#palette5 <- c("#324376", "#586ba4", "#f5dd90", "#ee964b", "#f95738")
palette4 <- c("#324376", "#586ba4", "#ee964b", "#f95738")
palette5 <- c("#FFFDFC", "#FFD5C8", "#FFC6B5", "#FF8061", "#F95738")
palette2 <- c("#324376", "#f95738")
mod <- glm (hin ~ crsh_cn+fatal+injury, data=dat, family = binomial)
dat <- dat %>% as.numeric(dat$hin)
dat %>%
mutate(hin1 = as.numeric(hin))
View(dat)
dat<- dat %>%
mutate(hin1 = as.numeric(hin))
View(dat)
numericVars <-
select_if(ip_join %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal, fatal_c, injury, injury_c Ttl_Ppl, starts_with("PCT")) %>%
numericVars <-
select_if(ip_join %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal, fatal_c, injury, injury_c, Ttl_Ppl, starts_with("PCT")) %>%
na.omit()
numericVars <-
select_if(dat %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal, fatal_c, injury, injury_c, Ttl_Ppl, starts_with("PCT")) %>%
na.omit()
View(dat)
dat <- dat %>%
mutate(hin1 = as.numeric(hin),
fatal1=as.numeric(fatal),
injury1=as.numeric(injury))
numericVars <-
select_if(dat %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal1, fatal_c, injury1, injury_c, Ttl_Ppl, starts_with("PCT")) %>%
na.omit()
View(dat)
dat <- dat %>%
mutate(hin1 = as.numeric(hin),
fatal1=as.numeric(fatal),
injury1=as.numeric(injury),
injury_ct=as.numeric(injury_c))
numericVars <-
select_if(dat %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal1, fatal_c, injury1, injry_c, Ttl_Ppl, starts_with("PCT")) %>%
na.omit()
View(numericVars)
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlation Across Numeric Variables",
subtitle = "Census tracts, Chester County, PA")
mod <- glm (hin ~ crsh_cn+fatal1+injury1, data=dat, family = binomial)
mod <- glm (hin1 ~ crsh_cn+fatal1+injury1, data=dat, family = binomial)
mod
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlation Across Numeric Variables",
subtitle = "Census tracts, Chester County, PA")
numericVars <-
select_if(dat %>% st_drop_geometry(), is.numeric) %>%
select(Join_Count, all311_, m311_cn, hin1, hin_cnt, crsh_cn, fatal1, fatal_c, injury1, injry_c, Ttl_Ppl, starts_with("PCT")) %>%
na.omit()
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlation Across Numeric Variables",
subtitle = "Census tracts, Chester County, PA")
subtitle = "Census tracts, Chester County, PA")
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlation Across Numeric Variables",
subtitle = "Census tracts, Chester County, PA")
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlation Across Numeric Variables",
subtitle = "Intersection Polygons, Philadelphia, PA")
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlations of Demographic Data, HIN Data, and 311 Data",
subtitle = "Intersection Polygons, Philadelphia, PA")
ggcorrplot(  #correlation plot
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
show.diag = TRUE,
lab = TRUE,
colors = c("#08519c", "white", "#FA342A"),
type="lower",
insig = "blank") +
labs(title = "Correlations of Demographic Data, HIN Data, and 311 Data",
subtitle = "Intersection Polygons, Philadelphia, PA")
#use this line to look at acs variables
variables19_5 <- load_variables(year = 2019,dataset = "acs5")
View(variables19_5)
hist(dat$hin_cnt)
hist(dat$m311_cn)
hist(dat$log(m311_cn))
hist(log(dat$m311_cn))
View(dat)
get_acs_csv <- function(yr1, variableList, nameList) {
acs1 <- get_acs(geography = "tract",
year = yr1,
variables = variableList,
geometry = TRUE,
state  = "PA",
county = "Philadelphia",
output = "wide"
)
acs_full <- acs1 %>% dplyr:: select(!ends_with("M")) #include this line to remove margins of error
names(acs_full) <- c("GEOID","NAME", nameList,"geometry")
#acs_full <- acs_full[order(acs_full$GEOID),]
#write.csv(acs_full, file=paste(deparse(substitute(variableList)), yr1,"-",yr2, ".csv")) #include this line to export a csv
return(acs_full)
}
variableList <- c("B01001_001", #total population
"B01001_002", #total male
"B01001_026", #total female
"B02001_002", #white alone
"B02001_003", #black alone
"B02001_004", #AmIn/AlNative alone
"B02001_005", #Asian alone
"B02001_006", #Native hawaiian/PI alone
"B02001_007", #some other race alone
"B02001_008", #two plus races
"B03003_003", #total Hispanic or Latino
"B05009_001", #under 18 years B05009_001 for 2010, B09001_001 for 2019
"B15001_001", #18 years + B15001_001 for 2010, B09021_001 for 2019
"B11003_001", #families with children under 18
"B08301_001", #workers
"B08301_002", #means of transportation to work: car
"B08301_010", #means of transportation to work: public transit
"B08301_018", #means of transportation to work: bicycle
"B08301_019", #means of transportation to work: walked
"B08301_021", #means of transportation to work: wfh
"B19013_001", #median income
"B17001_002", #Income in the past 12 months below poverty level
"B17001_031", #Income in the past 12 months at or above poverty level
"B25064_001", #median gross rent
"B25003_002", #owner occupied
"B25003_003" #renter occupied
)
nameList <- c("pop",
"male",
"fem",
"white",
"black",
"native_am",
"asian",
"nh_pi",
"other",
"multi",
"hisp_lat",
"Under_18",
"Above_18",
"fam_child",
"workers",
"Car",
"Transit",
"Bicycle",
"Walking",
"WFH",
"mdn_inc",
"blw_pov",
"abv_pov",
"med_rent",
"own",
"rent")
acs_data <- get_acs_csv(2019,variableList, nameList)
# add percentages
acs_data <- acs_data %>%
mutate(PCT_m = male/pop,
PCT_f = fem/pop,
PCT_wht = white/pop,
PCT_blk = black/pop,
PCT_na = native_am/pop,
PCT_asn = asian/pop,
PCT_pi = nh_pi/pop,
PCT_oth = other/pop,
PCT_mlt = multi/pop,
PCT_hsp = hisp_lat/pop,
PCT_car = Car/Total_Workers,
PCT_trn = Transit/Total_Workers,
PCT_bik = Bicycle/Total_Workers,
PCT_wlk = Walking/Total_Workers,
PCT_wfh = WFH/Total_Workers,
PCT_pov = blw_pov/Total_Population,
PCT_own = own/pop,
PCT_rent = rent/pop)
# add percentages
acs_data <- acs_data %>%
mutate(PCT_m = male/pop,
PCT_f = fem/pop,
PCT_wht = white/pop,
PCT_blk = black/pop,
PCT_na = native_am/pop,
PCT_asn = asian/pop,
PCT_pi = nh_pi/pop,
PCT_oth = other/pop,
PCT_mlt = multi/pop,
PCT_hsp = hisp_lat/pop,
PCT_car = Car/workers,
PCT_trn = Transit/workers,
PCT_bik = Bicycle/workers,
PCT_wlk = Walking/workers,
PCT_wfh = WFH/workers,
PCT_pov = blw_pov/pop,
PCT_own = own/pop,
PCT_rent = rent/pop)
acs_data <- st_transform(acs_data,crs=4326)
#this line writes the data to a shapefile
st_write(acs_data,"G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL/data/acs.shp", driver="ESRI Shapefile", append=FALSE)
# may have to run the data reading lines in the console
all311 <- read_sf("./data/311_2019/public_cases_fc.shp")
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/PBN_Final")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr);library(ggplot2);library(Hmisc);library(stargazer); library(htmlTable);library(kableExtra);library (gmodels);library(MASS);library(vcd);library(gridExtra);library(showtext);library(xtable);library(car);library(sf);library(sfnetworks); library(tidycensus);library(tidygraph);library(ggcorrplot);library(mlogit);library(AER);library(Hmisc)
options(scipen=0)
setwd("G:/My Drive/GrSchool/CPLN 505 Planning by Numbers/CPLN505_FINAL")
palette <- c("#10142A", "#47E9B9", "#F55D60", "#71EA48", "#C148EA", "#EAC148" )
viridisPalette <- c("#440154", "#73D055", "#F55D60", "#238A8D", "#FDE725")
#palette5 <- c("#324376", "#586ba4", "#f5dd90", "#ee964b", "#f95738")
palette4 <- c("#324376", "#586ba4", "#ee964b", "#f95738")
palette5 <- c("#FFFDFC", "#FFD5C8", "#FFC6B5", "#FF8061", "#F95738")
palette2 <- c("#324376", "#f95738")
dat %>% st_drop_geometry() %>%
select_if(., is.numeric) %>%
stargazer(type="html", title="Summary Table of Continuous Variables",
single.row = TRUE, digits=1)
dat %>% st_drop_geometry() %>%
select_if(., is.numeric) %>%
stargazer(type="html", title="Summary Table of Continuous Variables",
single.row = TRUE, digits=1)
#backward stepwise regression
test_mod <- glm(hin ~ .,
data = dat %>% st_drop_geometry(),
family="binomial" (link="logit"))
#backward stepwise regression
test_mod <- glm(hin1 ~ .,
data = dat %>% st_drop_geometry(),
family="binomial" (link="logit"))
